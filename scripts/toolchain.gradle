def fileName = 'FRC-2018-Windows-Toolchain-5.5.zip'
def gccVersion = '6.3.0'
def baseUrl = 'http://first.wpi.edu/FRC/roborio/toolchains/'

def downloadUrl = baseUrl + fileName

def extractLocation = file("$buildDir/toolchain/win")

def fileNameMac = 'FRC-2018-Windows-Toolchain-5.5.zip'
def baseUrlMac = 'http://first.wpi.edu/FRC/roborio/toolchains/'

def downloadUrlMac = baseUrlMac + fileNameMac
def fileMac = file("$buildDir/$fileNameMac")

def fileNameLinux = 'FRC-2018-Windows-Toolchain-5.5.zip'
def baseUrlLinux = 'http://first.wpi.edu/FRC/roborio/toolchains/'

def downloadUrlLinux = baseUrlLinux + fileNameLinux
def fileLinux = file("$buildDir/$fileNameLinux")

apply plugin: 'de.undercouch.download'

def downloadTask = tasks.register('downloadToolchain', Download) {
  src downloadUrl
  dest buildDir
  overwrite false
}

def extractTask = tasks.register('extractToolchain', Copy) {
  dependsOn downloadTask

  from zipTree(file("$buildDir/$fileName")).matching{ include "frc/**"}
  into extractLocation
  eachFile { f->
    f.path = f.path.substring(4) // length of frc
  }

  includeEmptyDirs = false
}

def downloadTaskMac = tasks.register('downloadToolchainMac', Download) {
  src downloadUrlMac
  dest buildDir
  overwrite false
}

def downloadTaskLinux = tasks.register('downloadToolchainLinux', Download) {
  src downloadUrlLinux
  dest buildDir
  overwrite false
}

ext.toolchainConfigTaskSetup = {
  return new Tuple2({ task->
    task.inputs.property 'toolchainName', fileName
  }, { config->
    def toolchainConfig = [:];

    toolchainConfig['Version'] = gccVersion
    toolchainConfig['Directory'] = 'roborio'
    toolchainConfig['ToolChainFile'] = 'toolchain.tar.gz'

    config['CppToolchain'] = toolchainConfig
  });
}

ext.toolchainZipSetup = { Zip zip->
  if (project.hasProperty('linuxBuild')) {
    zip.dependsOn downloadTaskLinux

    zip.inputs.file fileLinux

    zip.from(fileLinux) {
      info '/installUtils'
      rename { 'toolchain.tar.gz' }
    }
  } else if (project.hasProperty('macBuild')) {
    zip.dependsOn downloadTaskMac

    zip.inputs.file fileMac

    zip.from(fileMac) {
      info '/installUtils'
      rename { 'toolchain.tar.gz' }
    }
  } else {
    zip.dependsOn extractTask

    zip.inputs.dir extractLocation

    zip.from(extractLocation) {
      into '/roborio'
    }
  }
}
